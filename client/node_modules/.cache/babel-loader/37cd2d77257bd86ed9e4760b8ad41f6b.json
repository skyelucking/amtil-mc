{"ast":null,"code":"import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport \"../../App.css\";\nimport DatePicker from \"react-date-picker\";\nAxios.defaults.withCredentials = true;\nexport default function Basics() {\n  // Start of Cloudinary Upload\n  const [image, setImage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const uploadImage = async e => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"amtilunsigned\");\n    setLoading(true);\n    const res = await fetch(\"\thttps://api.cloudinary.com/v1_1/amtil/image/upload\", {\n      method: \"POST\",\n      body: data\n    });\n    const file = await res.json();\n    setImage(file.secure_url);\n    setLoading(false);\n    return file.secure_url;\n  }; //End of Cloudinary Upload//\n\n\n  const [status, setStatus] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [summary, setSummary] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n  const [start_date, setStartDate] = useState(\"\");\n  const [end_date, setEndDate] = useState(\"\");\n  const [cover_img, setCoverImg] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [mission_id, setMissionId] = useState(\"\");\n\n  const mission_basics = () => {\n    Axios.post(\"/basics\", {\n      status: status,\n      name: name,\n      category: category,\n      summary: summary,\n      notes: notes,\n      start_date: start_date,\n      end_date: end_date,\n      cover_img: image,\n      description: description\n    }).then(response => {\n      if (response.data.message) {\n        setMissionId(response.data.message);\n      } else {\n        setMissionId(response.data.mission_id);\n        window.sessionStorage.setItem(\"mission\", JSON.stringify({\n          mission_id: response.data.mission_id,\n          name: response.data.name\n        }));\n      }\n    }); // });\n  };\n}","map":{"version":3,"sources":["C:/Users/lucki/Desktop/ClassCodeProjects/amtil-mc/client/src/pages/Mission/Basics.js"],"names":["React","useState","Axios","DatePicker","defaults","withCredentials","Basics","image","setImage","loading","setLoading","uploadImage","e","files","target","data","FormData","append","res","fetch","method","body","file","json","secure_url","status","setStatus","name","setName","category","setCategory","summary","setSummary","notes","setNotes","start_date","setStartDate","end_date","setEndDate","cover_img","setCoverImg","description","setdescription","mission_id","setMissionId","mission_basics","post","then","response","message","window","sessionStorage","setItem","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport \"../../App.css\";\nimport DatePicker from \"react-date-picker\";\n\nAxios.defaults.withCredentials = true;\n\nexport default function Basics() {\n  // Start of Cloudinary Upload\n  const [image, setImage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const uploadImage = async (e) => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"amtilunsigned\");\n    setLoading(true);\n    const res = await fetch(\n      \"\thttps://api.cloudinary.com/v1_1/amtil/image/upload\",\n      {\n        method: \"POST\",\n        body: data,\n      }\n    );\n    const file = await res.json();\n\n    setImage(file.secure_url);\n    setLoading(false);\n\n    return file.secure_url;\n  };\n\n  //End of Cloudinary Upload//\n  const [status, setStatus] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [summary, setSummary] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n  const [start_date, setStartDate] = useState(\"\");\n  const [end_date, setEndDate] = useState(\"\");\n  const [cover_img, setCoverImg] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [mission_id, setMissionId] = useState(\"\");\n\n  const mission_basics = () => {\n    Axios.post(\"/basics\", {\n      status: status,\n      name: name,\n      category: category,\n      summary: summary,\n      notes: notes,\n      start_date: start_date,\n      end_date: end_date,\n      cover_img: image,\n      description: description,\n    }).then((response) => {\n      if (response.data.message) {\n        setMissionId(response.data.message);\n      } else {\n        setMissionId(response.data.mission_id);\n        window.sessionStorage.setItem(\n          \"mission\",\n          JSON.stringify({\n            mission_id: response.data.mission_id,\n            name: response.data.name,\n          })\n        );\n      }\n    });\n    \n    // });\n  };\n  \n}\n"]},"metadata":{},"sourceType":"module"}