{"ast":null,"code":"var setHeaders = function (req, headers) {\n  if (headers) {\n    Object.keys(headers).forEach(function (name) {\n      if (headers[name] !== undefined) {\n        req.setRequestHeader(name, headers[name]);\n      }\n    });\n  }\n};\n\nvar request = function (url, data) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var req = new XMLHttpRequest();\n  var pXhr = new Promise(function (resolve, reject) {\n    req.onerror = function () {\n      return reject(req);\n    };\n\n    req.ontimeout = function () {\n      return reject(req);\n    };\n\n    req.onabort = function () {\n      return reject(req);\n    };\n\n    req.onload = function () {\n      return resolve(req);\n    };\n\n    req.open(options.method || \"GET\", url);\n    setHeaders(req, options.headers);\n    req.withCredentials = !!options.withCredentials;\n\n    if (options.preSend) {\n      options.preSend(req);\n    }\n\n    req.send(data);\n  }); // $FlowFixMe - adding xhr to Promise\n\n  pXhr.xhr = req;\n  return pXhr;\n};\n\nexport default request;","map":{"version":3,"sources":["C:/Users/lucki/Desktop/ClassCodeProjects/amtil-mc/node_modules/@rpldy/shared/lib/esm/request/request.js"],"names":["setHeaders","req","headers","Object","keys","forEach","name","undefined","setRequestHeader","request","url","data","options","arguments","length","XMLHttpRequest","pXhr","Promise","resolve","reject","onerror","ontimeout","onabort","onload","open","method","withCredentials","preSend","send","xhr"],"mappings":"AAAA,IAAIA,UAAU,GAAG,UAAUC,GAAV,EAAeC,OAAf,EAAwB;AACvC,MAAIA,OAAJ,EAAa;AACXC,IAAAA,MAAM,CAACC,IAAP,CAAYF,OAAZ,EAAqBG,OAArB,CAA6B,UAAUC,IAAV,EAAgB;AAC3C,UAAIJ,OAAO,CAACI,IAAD,CAAP,KAAkBC,SAAtB,EAAiC;AAC/BN,QAAAA,GAAG,CAACO,gBAAJ,CAAqBF,IAArB,EAA2BJ,OAAO,CAACI,IAAD,CAAlC;AACD;AACF,KAJD;AAKD;AACF,CARD;;AAUA,IAAIG,OAAO,GAAG,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AACjC,MAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBN,SAAzC,GAAqDM,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,MAAIZ,GAAG,GAAG,IAAIc,cAAJ,EAAV;AACA,MAAIC,IAAI,GAAG,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAChDlB,IAAAA,GAAG,CAACmB,OAAJ,GAAc,YAAY;AACxB,aAAOD,MAAM,CAAClB,GAAD,CAAb;AACD,KAFD;;AAIAA,IAAAA,GAAG,CAACoB,SAAJ,GAAgB,YAAY;AAC1B,aAAOF,MAAM,CAAClB,GAAD,CAAb;AACD,KAFD;;AAIAA,IAAAA,GAAG,CAACqB,OAAJ,GAAc,YAAY;AACxB,aAAOH,MAAM,CAAClB,GAAD,CAAb;AACD,KAFD;;AAIAA,IAAAA,GAAG,CAACsB,MAAJ,GAAa,YAAY;AACvB,aAAOL,OAAO,CAACjB,GAAD,CAAd;AACD,KAFD;;AAIAA,IAAAA,GAAG,CAACuB,IAAJ,CAASZ,OAAO,CAACa,MAAR,IAAkB,KAA3B,EAAkCf,GAAlC;AACAV,IAAAA,UAAU,CAACC,GAAD,EAAMW,OAAO,CAACV,OAAd,CAAV;AACAD,IAAAA,GAAG,CAACyB,eAAJ,GAAsB,CAAC,CAACd,OAAO,CAACc,eAAhC;;AAEA,QAAId,OAAO,CAACe,OAAZ,EAAqB;AACnBf,MAAAA,OAAO,CAACe,OAAR,CAAgB1B,GAAhB;AACD;;AAEDA,IAAAA,GAAG,CAAC2B,IAAJ,CAASjB,IAAT;AACD,GA1BU,CAAX,CAHiC,CA6B7B;;AAEJK,EAAAA,IAAI,CAACa,GAAL,GAAW5B,GAAX;AACA,SAAOe,IAAP;AACD,CAjCD;;AAmCA,eAAeP,OAAf","sourcesContent":["var setHeaders = function (req, headers) {\n  if (headers) {\n    Object.keys(headers).forEach(function (name) {\n      if (headers[name] !== undefined) {\n        req.setRequestHeader(name, headers[name]);\n      }\n    });\n  }\n};\n\nvar request = function (url, data) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var req = new XMLHttpRequest();\n  var pXhr = new Promise(function (resolve, reject) {\n    req.onerror = function () {\n      return reject(req);\n    };\n\n    req.ontimeout = function () {\n      return reject(req);\n    };\n\n    req.onabort = function () {\n      return reject(req);\n    };\n\n    req.onload = function () {\n      return resolve(req);\n    };\n\n    req.open(options.method || \"GET\", url);\n    setHeaders(req, options.headers);\n    req.withCredentials = !!options.withCredentials;\n\n    if (options.preSend) {\n      options.preSend(req);\n    }\n\n    req.send(data);\n  }); // $FlowFixMe - adding xhr to Promise\n\n  pXhr.xhr = req;\n  return pXhr;\n};\n\nexport default request;"]},"metadata":{},"sourceType":"module"}