{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { logger, FILE_STATES, request, parseResponseHeaders, pick, merge } from \"@rpldy/shared\";\nimport { XHR_SENDER_TYPE } from \"../consts\";\nimport MissingUrlError from \"../MissingUrlError\";\nimport prepareFormData from \"./prepareFormData\";\nexport var SUCCESS_CODES = [200, 201, 202, 203, 204];\n\nvar getRequestData = function (items, options) {\n  var data;\n\n  if (options.sendWithFormData) {\n    logger.debugLog(\"uploady.sender: sending \".concat(items.length, \" item(s) as form data\"));\n    data = prepareFormData(items, options);\n  } else {\n    if (items.length > 1) {\n      throw new Error(\"XHR Sender - Request without form data can only contain 1 item. received \".concat(items.length));\n    }\n\n    var item = items[0];\n    logger.debugLog(\"uploady.sender: sending item \".concat(item.id, \" as request body\"));\n    data = item.file || item.url;\n  }\n\n  return data;\n};\n\nvar makeRequest = function (items, url, options, onProgress, config) {\n  var xhr;\n  var data = (config === null || config === void 0 ? void 0 : config.getRequestData) ? config.getRequestData(items, options) : getRequestData(items, options);\n\n  var issueRequest = function () {\n    var requestUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : url;\n    var requestData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : data;\n    var requestOptions = arguments.length > 2 ? arguments[2] : undefined;\n    requestOptions = merge(_objectSpread(_objectSpread({}, pick(options, [\"method\", \"headers\", \"withCredentials\"])), {}, {\n      preSend: function preSend(req) {\n        req.upload.onprogress = function (e) {\n          if (e.lengthComputable && onProgress) {\n            onProgress(e, items.slice());\n          }\n        };\n      }\n    }), requestOptions);\n    var realPXhr = request(requestUrl, requestData, requestOptions); // $FlowFixMe -\n\n    xhr = realPXhr.xhr;\n    return realPXhr;\n  }; //pXhr is a promise that resolves to the upload XHR\n\n\n  var pXhr = (config === null || config === void 0 ? void 0 : config.preRequestHandler) ? config.preRequestHandler(issueRequest, items, url, options, onProgress, config) : issueRequest();\n  return {\n    url: url,\n    count: items.length,\n    pXhr: pXhr,\n    getXhr: function getXhr() {\n      return xhr;\n    },\n    aborted: false\n  };\n};\n\nvar parseResponseJson = function (response, headers, options) {\n  var parsed = response;\n  var ct = headers === null || headers === void 0 ? void 0 : headers[\"content-type\"];\n\n  if (options.forceJsonResponse || (ct === null || ct === void 0 ? void 0 : ct.includes(\"json\"))) {\n    try {\n      parsed = JSON.parse(response);\n    } catch (_unused) {//silent fail\n    }\n  }\n\n  return parsed;\n};\n\nvar processResponse = function (sendRequest, options) {\n  return sendRequest.pXhr.then(function (xhr) {\n    var _options$formatServer, _options$formatServer2;\n\n    var state, response, status;\n    logger.debugLog(\"uploady.sender: received upload response \", xhr);\n    state = ~SUCCESS_CODES.indexOf(xhr.status) ? FILE_STATES.FINISHED : FILE_STATES.ERROR;\n    status = xhr.status;\n    var resHeaders = parseResponseHeaders(xhr);\n    response = {\n      data: (_options$formatServer = (_options$formatServer2 = options.formatServerResponse) === null || _options$formatServer2 === void 0 ? void 0 : _options$formatServer2.call(options, xhr.response, status, resHeaders)) !== null && _options$formatServer !== void 0 ? _options$formatServer : parseResponseJson(xhr.response, resHeaders, options),\n      headers: resHeaders\n    };\n    return {\n      status: status,\n      state: state,\n      response: response\n    };\n  })[\"catch\"](function (error) {\n    var state, response;\n\n    if (sendRequest.aborted) {\n      state = FILE_STATES.ABORTED;\n      response = \"aborted\";\n    } else {\n      logger.debugLog(\"uploady.sender: upload failed: \", error);\n      state = FILE_STATES.ERROR;\n      response = error;\n    }\n\n    return {\n      error: true,\n      state: state,\n      response: response,\n      status: 0\n    };\n  });\n};\n\nvar abortRequest = function (sendRequest) {\n  var abortCalled = false;\n  var aborted = sendRequest.aborted,\n      getXhr = sendRequest.getXhr;\n  var xhr = getXhr();\n\n  if (!aborted && xhr && xhr.readyState && xhr.readyState !== 4) {\n    logger.debugLog(\"uploady.sender: cancelling request with \".concat(sendRequest.count, \" items to: \").concat(sendRequest.url));\n    xhr.abort();\n    sendRequest.aborted = true;\n    abortCalled = true;\n  }\n\n  return abortCalled;\n};\n\nvar getXhrSend = function (config) {\n  return function (items, url, options, onProgress) {\n    if (!url) {\n      throw new MissingUrlError(XHR_SENDER_TYPE);\n    }\n\n    logger.debugLog(\"uploady.sender: sending file: \", {\n      items: items,\n      url: url,\n      options: options\n    });\n    var sendRequest = makeRequest(items, url, options, onProgress, config);\n    return {\n      request: processResponse(sendRequest, options),\n      abort: function abort() {\n        return abortRequest(sendRequest);\n      },\n      senderType: XHR_SENDER_TYPE\n    };\n  };\n};\n\nexport default getXhrSend;","map":{"version":3,"sources":["C:/Users/lucki/Desktop/ClassCodeProjects/amtil-mc/node_modules/@rpldy/sender/lib/esm/xhrSender/xhrSender.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","logger","FILE_STATES","request","parseResponseHeaders","pick","merge","XHR_SENDER_TYPE","MissingUrlError","prepareFormData","SUCCESS_CODES","getRequestData","items","options","data","sendWithFormData","debugLog","concat","Error","item","id","file","url","makeRequest","onProgress","config","xhr","issueRequest","requestUrl","undefined","requestData","requestOptions","preSend","req","upload","onprogress","e","lengthComputable","slice","realPXhr","pXhr","preRequestHandler","count","getXhr","aborted","parseResponseJson","response","headers","parsed","ct","forceJsonResponse","includes","JSON","parse","_unused","processResponse","sendRequest","then","_options$formatServer","_options$formatServer2","state","status","indexOf","FINISHED","ERROR","resHeaders","formatServerResponse","call","error","ABORTED","abortRequest","abortCalled","readyState","abort","getXhrSend","senderType"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { logger, FILE_STATES, request, parseResponseHeaders, pick, merge } from \"@rpldy/shared\";\nimport { XHR_SENDER_TYPE } from \"../consts\";\nimport MissingUrlError from \"../MissingUrlError\";\nimport prepareFormData from \"./prepareFormData\";\nexport var SUCCESS_CODES = [200, 201, 202, 203, 204];\n\nvar getRequestData = function (items, options) {\n  var data;\n\n  if (options.sendWithFormData) {\n    logger.debugLog(\"uploady.sender: sending \".concat(items.length, \" item(s) as form data\"));\n    data = prepareFormData(items, options);\n  } else {\n    if (items.length > 1) {\n      throw new Error(\"XHR Sender - Request without form data can only contain 1 item. received \".concat(items.length));\n    }\n\n    var item = items[0];\n    logger.debugLog(\"uploady.sender: sending item \".concat(item.id, \" as request body\"));\n    data = item.file || item.url;\n  }\n\n  return data;\n};\n\nvar makeRequest = function (items, url, options, onProgress, config) {\n  var xhr;\n  var data = (config === null || config === void 0 ? void 0 : config.getRequestData) ? config.getRequestData(items, options) : getRequestData(items, options);\n\n  var issueRequest = function () {\n    var requestUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : url;\n    var requestData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : data;\n    var requestOptions = arguments.length > 2 ? arguments[2] : undefined;\n    requestOptions = merge(_objectSpread(_objectSpread({}, pick(options, [\"method\", \"headers\", \"withCredentials\"])), {}, {\n      preSend: function preSend(req) {\n        req.upload.onprogress = function (e) {\n          if (e.lengthComputable && onProgress) {\n            onProgress(e, items.slice());\n          }\n        };\n      }\n    }), requestOptions);\n    var realPXhr = request(requestUrl, requestData, requestOptions); // $FlowFixMe -\n\n    xhr = realPXhr.xhr;\n    return realPXhr;\n  }; //pXhr is a promise that resolves to the upload XHR\n\n\n  var pXhr = (config === null || config === void 0 ? void 0 : config.preRequestHandler) ? config.preRequestHandler(issueRequest, items, url, options, onProgress, config) : issueRequest();\n  return {\n    url: url,\n    count: items.length,\n    pXhr: pXhr,\n    getXhr: function getXhr() {\n      return xhr;\n    },\n    aborted: false\n  };\n};\n\nvar parseResponseJson = function (response, headers, options) {\n  var parsed = response;\n  var ct = headers === null || headers === void 0 ? void 0 : headers[\"content-type\"];\n\n  if (options.forceJsonResponse || (ct === null || ct === void 0 ? void 0 : ct.includes(\"json\"))) {\n    try {\n      parsed = JSON.parse(response);\n    } catch (_unused) {//silent fail\n    }\n  }\n\n  return parsed;\n};\n\nvar processResponse = function (sendRequest, options) {\n  return sendRequest.pXhr.then(function (xhr) {\n    var _options$formatServer, _options$formatServer2;\n\n    var state, response, status;\n    logger.debugLog(\"uploady.sender: received upload response \", xhr);\n    state = ~SUCCESS_CODES.indexOf(xhr.status) ? FILE_STATES.FINISHED : FILE_STATES.ERROR;\n    status = xhr.status;\n    var resHeaders = parseResponseHeaders(xhr);\n    response = {\n      data: (_options$formatServer = (_options$formatServer2 = options.formatServerResponse) === null || _options$formatServer2 === void 0 ? void 0 : _options$formatServer2.call(options, xhr.response, status, resHeaders)) !== null && _options$formatServer !== void 0 ? _options$formatServer : parseResponseJson(xhr.response, resHeaders, options),\n      headers: resHeaders\n    };\n    return {\n      status: status,\n      state: state,\n      response: response\n    };\n  })[\"catch\"](function (error) {\n    var state, response;\n\n    if (sendRequest.aborted) {\n      state = FILE_STATES.ABORTED;\n      response = \"aborted\";\n    } else {\n      logger.debugLog(\"uploady.sender: upload failed: \", error);\n      state = FILE_STATES.ERROR;\n      response = error;\n    }\n\n    return {\n      error: true,\n      state: state,\n      response: response,\n      status: 0\n    };\n  });\n};\n\nvar abortRequest = function (sendRequest) {\n  var abortCalled = false;\n  var aborted = sendRequest.aborted,\n      getXhr = sendRequest.getXhr;\n  var xhr = getXhr();\n\n  if (!aborted && xhr && xhr.readyState && xhr.readyState !== 4) {\n    logger.debugLog(\"uploady.sender: cancelling request with \".concat(sendRequest.count, \" items to: \").concat(sendRequest.url));\n    xhr.abort();\n    sendRequest.aborted = true;\n    abortCalled = true;\n  }\n\n  return abortCalled;\n};\n\nvar getXhrSend = function (config) {\n  return function (items, url, options, onProgress) {\n    if (!url) {\n      throw new MissingUrlError(XHR_SENDER_TYPE);\n    }\n\n    logger.debugLog(\"uploady.sender: sending file: \", {\n      items: items,\n      url: url,\n      options: options\n    });\n    var sendRequest = makeRequest(items, url, options, onProgress, config);\n    return {\n      request: processResponse(sendRequest, options),\n      abort: function abort() {\n        return abortRequest(sendRequest);\n      },\n      senderType: XHR_SENDER_TYPE\n    };\n  };\n};\n\nexport default getXhrSend;"]},"metadata":{},"sourceType":"module"}