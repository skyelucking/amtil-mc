{"ast":null,"code":"import { BATCH_STATES, createBatchItem } from \"@rpldy/shared\";\nimport { DEFAULT_FILTER } from \"./defaults\";\nimport { getIsFileList } from \"./utils\";\nvar bCounter = 0;\n\nvar processFiles = function (batchId, files, isPending, fileFilter) {\n  return Array.prototype.filter.call(files, fileFilter || DEFAULT_FILTER).map(function (f) {\n    return createBatchItem(f, batchId, isPending);\n  });\n};\n\nexport default (function (files, uploaderId, options) {\n  bCounter += 1;\n  var id = \"batch-\".concat(bCounter);\n  var isFileList = getIsFileList(files);\n  files = Array.isArray(files) || isFileList ? files : [files];\n  var isPending = !options.autoUpload;\n  var items = processFiles(id, files, isPending, options.fileFilter);\n  return {\n    id: id,\n    uploaderId: uploaderId,\n    items: items,\n    state: isPending ? BATCH_STATES.PENDING : BATCH_STATES.ADDED,\n    completed: 0,\n    loaded: 0,\n    orgItemCount: items.length\n  };\n});","map":{"version":3,"sources":["C:/Users/lucki/Desktop/ClassCodeProjects/amtil-mc/node_modules/@rpldy/uploader/lib/esm/batch.js"],"names":["BATCH_STATES","createBatchItem","DEFAULT_FILTER","getIsFileList","bCounter","processFiles","batchId","files","isPending","fileFilter","Array","prototype","filter","call","map","f","uploaderId","options","id","concat","isFileList","isArray","autoUpload","items","state","PENDING","ADDED","completed","loaded","orgItemCount","length"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,eAAvB,QAA8C,eAA9C;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAASC,aAAT,QAA8B,SAA9B;AACA,IAAIC,QAAQ,GAAG,CAAf;;AAEA,IAAIC,YAAY,GAAG,UAAUC,OAAV,EAAmBC,KAAnB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiD;AAClE,SAAOC,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuBC,IAAvB,CAA4BN,KAA5B,EAAmCE,UAAU,IAAIP,cAAjD,EAAiEY,GAAjE,CAAqE,UAAUC,CAAV,EAAa;AACvF,WAAOd,eAAe,CAACc,CAAD,EAAIT,OAAJ,EAAaE,SAAb,CAAtB;AACD,GAFM,CAAP;AAGD,CAJD;;AAMA,gBAAgB,UAAUD,KAAV,EAAiBS,UAAjB,EAA6BC,OAA7B,EAAsC;AACpDb,EAAAA,QAAQ,IAAI,CAAZ;AACA,MAAIc,EAAE,GAAG,SAASC,MAAT,CAAgBf,QAAhB,CAAT;AACA,MAAIgB,UAAU,GAAGjB,aAAa,CAACI,KAAD,CAA9B;AACAA,EAAAA,KAAK,GAAGG,KAAK,CAACW,OAAN,CAAcd,KAAd,KAAwBa,UAAxB,GAAqCb,KAArC,GAA6C,CAACA,KAAD,CAArD;AACA,MAAIC,SAAS,GAAG,CAACS,OAAO,CAACK,UAAzB;AACA,MAAIC,KAAK,GAAGlB,YAAY,CAACa,EAAD,EAAKX,KAAL,EAAYC,SAAZ,EAAuBS,OAAO,CAACR,UAA/B,CAAxB;AACA,SAAO;AACLS,IAAAA,EAAE,EAAEA,EADC;AAELF,IAAAA,UAAU,EAAEA,UAFP;AAGLO,IAAAA,KAAK,EAAEA,KAHF;AAILC,IAAAA,KAAK,EAAEhB,SAAS,GAAGR,YAAY,CAACyB,OAAhB,GAA0BzB,YAAY,CAAC0B,KAJlD;AAKLC,IAAAA,SAAS,EAAE,CALN;AAMLC,IAAAA,MAAM,EAAE,CANH;AAOLC,IAAAA,YAAY,EAAEN,KAAK,CAACO;AAPf,GAAP;AASD,CAhBD","sourcesContent":["import { BATCH_STATES, createBatchItem } from \"@rpldy/shared\";\nimport { DEFAULT_FILTER } from \"./defaults\";\nimport { getIsFileList } from \"./utils\";\nvar bCounter = 0;\n\nvar processFiles = function (batchId, files, isPending, fileFilter) {\n  return Array.prototype.filter.call(files, fileFilter || DEFAULT_FILTER).map(function (f) {\n    return createBatchItem(f, batchId, isPending);\n  });\n};\n\nexport default (function (files, uploaderId, options) {\n  bCounter += 1;\n  var id = \"batch-\".concat(bCounter);\n  var isFileList = getIsFileList(files);\n  files = Array.isArray(files) || isFileList ? files : [files];\n  var isPending = !options.autoUpload;\n  var items = processFiles(id, files, isPending, options.fileFilter);\n  return {\n    id: id,\n    uploaderId: uploaderId,\n    items: items,\n    state: isPending ? BATCH_STATES.PENDING : BATCH_STATES.ADDED,\n    completed: 0,\n    loaded: 0,\n    orgItemCount: items.length\n  };\n});"]},"metadata":{},"sourceType":"module"}