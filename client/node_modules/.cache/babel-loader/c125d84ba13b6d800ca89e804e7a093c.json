{"ast":null,"code":"import { useEffect } from \"react\";\nimport { logger } from \"@rpldy/shared\";\nimport { useUploadyContext } from \"@rpldy/shared-ui\"; //https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#form-submission-algorithm\n\nvar getUrl = function (form) {\n  var loc = window.location;\n  var url = form.getAttribute(\"action\") || \"\";\n  url = url.replace(/\\s/g, \"\");\n  var path; // eslint-disable-next-line default-case\n\n  switch (true) {\n    //if empty, use same url as page\n    case url === \"\":\n      url = loc.href;\n      break;\n    //starts with \"/\", make it absolute\n\n    case url.startsWith(\"/\"):\n      url = \"\".concat(loc.protocol, \"//\").concat(loc.host).concat(url);\n      break;\n    //not an http(s) and doesnt start with \"/\", make it relative\n\n    case !/:\\/\\//.test(url):\n      path = loc.pathname.split(\"/\").slice(0, -1).concat(\"\").join(\"/\");\n      url = \"\".concat(loc.protocol, \"//\").concat(loc.host).concat(path).concat(url);\n      break;\n  }\n\n  return url;\n};\n\nvar getDestinationFromInput = function (input) {\n  var form = input.closest(\"form\");\n  var destination = {\n    filesParamName: input.getAttribute(\"name\"),\n    method: undefined,\n    url: undefined\n  };\n\n  if (form) {\n    var method = form.getAttribute(\"method\"),\n        url = getUrl(form);\n    destination.method = method ? method.toUpperCase() : undefined;\n    destination.url = url;\n    logger.debugLog(\"Uploady.useFileInput: using custom input's parent form url \".concat(destination.url, \" and method \").concat(destination.method || \"\"));\n  }\n\n  return destination;\n};\n\nexport default (function (fileInputRef) {\n  var context = useUploadyContext();\n  context.setExternalFileInput(fileInputRef);\n  useEffect(function () {\n    //uses Element.prototype.closest so no IE11 support - use polyfill\n    if (fileInputRef.current && fileInputRef.current.closest) {\n      var input = fileInputRef.current;\n      var uploaderOptions = context.getOptions(); //if no destination was passed, try and get from input's parent form\n\n      if (!uploaderOptions.destination || !uploaderOptions.destination.url) {\n        var domDestination = getDestinationFromInput(input);\n        context.setOptions({\n          destination: domDestination\n        });\n      }\n    }\n  }, [fileInputRef, context]);\n});","map":{"version":3,"sources":["C:/Users/lucki/Desktop/ClassCodeProjects/amtil-mc/node_modules/@rpldy/uploady/lib/esm/useFileInput.js"],"names":["useEffect","logger","useUploadyContext","getUrl","form","loc","window","location","url","getAttribute","replace","path","href","startsWith","concat","protocol","host","test","pathname","split","slice","join","getDestinationFromInput","input","closest","destination","filesParamName","method","undefined","toUpperCase","debugLog","fileInputRef","context","setExternalFileInput","current","uploaderOptions","getOptions","domDestination","setOptions"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { logger } from \"@rpldy/shared\";\nimport { useUploadyContext } from \"@rpldy/shared-ui\";\n\n//https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#form-submission-algorithm\nvar getUrl = function (form) {\n  var loc = window.location;\n  var url = form.getAttribute(\"action\") || \"\";\n  url = url.replace(/\\s/g, \"\");\n  var path; // eslint-disable-next-line default-case\n\n  switch (true) {\n    //if empty, use same url as page\n    case url === \"\":\n      url = loc.href;\n      break;\n    //starts with \"/\", make it absolute\n\n    case url.startsWith(\"/\"):\n      url = \"\".concat(loc.protocol, \"//\").concat(loc.host).concat(url);\n      break;\n    //not an http(s) and doesnt start with \"/\", make it relative\n\n    case !/:\\/\\//.test(url):\n      path = loc.pathname.split(\"/\").slice(0, -1).concat(\"\").join(\"/\");\n      url = \"\".concat(loc.protocol, \"//\").concat(loc.host).concat(path).concat(url);\n      break;\n  }\n\n  return url;\n};\n\nvar getDestinationFromInput = function (input) {\n  var form = input.closest(\"form\");\n  var destination = {\n    filesParamName: input.getAttribute(\"name\"),\n    method: undefined,\n    url: undefined\n  };\n\n  if (form) {\n    var method = form.getAttribute(\"method\"),\n        url = getUrl(form);\n    destination.method = method ? method.toUpperCase() : undefined;\n    destination.url = url;\n    logger.debugLog(\"Uploady.useFileInput: using custom input's parent form url \".concat(destination.url, \" and method \").concat(destination.method || \"\"));\n  }\n\n  return destination;\n};\n\nexport default (function (fileInputRef) {\n  var context = useUploadyContext();\n  context.setExternalFileInput(fileInputRef);\n  useEffect(function () {\n    //uses Element.prototype.closest so no IE11 support - use polyfill\n    if (fileInputRef.current && fileInputRef.current.closest) {\n      var input = fileInputRef.current;\n      var uploaderOptions = context.getOptions(); //if no destination was passed, try and get from input's parent form\n\n      if (!uploaderOptions.destination || !uploaderOptions.destination.url) {\n        var domDestination = getDestinationFromInput(input);\n        context.setOptions({\n          destination: domDestination\n        });\n      }\n    }\n  }, [fileInputRef, context]);\n});"]},"metadata":{},"sourceType":"module"}