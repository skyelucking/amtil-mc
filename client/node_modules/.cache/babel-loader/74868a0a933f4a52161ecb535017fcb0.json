{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucki\\\\Desktop\\\\ClassCodeProjects\\\\amtil-mc\\\\client\\\\src\\\\pages\\\\Equipment\\\\MissionEquip.js\";\nimport \"../../App.css\";\nimport React, { useState, useEffect, View } from \"react\";\nimport Axios from \"axios\";\nimport { Container, Table } from \"react-bootstrap\";\nimport { Checkbox } from \"@material-ui/core\";\nimport ShowSelectedEquip from \"./ShowSelectedEquip\";\n\nconst MissionEquip = () => {\n  const [mission_id, setMissionID] = useState(JSON.parse(window.sessionStorage.getItem(\"mission\")).mission_id);\n  const [equipList, setEquipList] = useState([]);\n  const [equip_id, setEquipID] = useState(\"\"); //GETS MISSION ID FROM SESSION VARIABLE\n\n  useEffect(() => {\n    const mission_id = JSON.parse(window.sessionStorage.getItem(\"mission\")).mission_id;\n    Axios.get(\"/equipdetails\").then(response => {\n      const equip_array = response.data.map(equip => ({ ...equip,\n        checked: false\n      }));\n      setEquipList(equip_array);\n    }); // Axios.get(\"/basics/\" + mission_id).then((response) => {\n    //   // console.log(\"basics\", response.data);\n    //   setEquipBox(response);\n    // });\n    // setEquipBox([1 ,2 ,3]);\n    // console.log(\"equip_box:\", equip_box);\n  }, []); //GETS TOOL LIST FOR TOOL CATALOG //\n  //SAVES EACH TOOL TO MISSION TOOLS WHEN BOX IS CHECKED //\n  // const mission_equipbox = () => {\n  //   Axios.get(\"/basics/\" + mission_id)\n  //     .then((response) => {\n  //       console.log(\"basics\", response.data);\n  //     })\n  //     .then((response) => {\n  //       // console.log(response);\n  //       setEquipBox(response);\n  //     });\n  // };\n\n  const mission_equiplist = (index, equip_array, equipId) => {\n    if (equip_array[index].checked === true) {\n      console.log(\"mission_id\", mission_id, \"equip_id\", equipId);\n      Axios.post(\"/missionequip\", {\n        equip_id: equipId,\n        mission_id: mission_id\n      }).then(response => {\n        console.log(response);\n      });\n    } else {\n      Axios.delete(\"/missionequip/\" + mission_id + \"/\" + equipId).then(response => {\n        console.log(response);\n      });\n    }\n  };\n\n  const checkedState = (index, equipId) => {\n    const tempArray = equipList;\n    tempArray[index].checked = !tempArray[index].checked;\n    setEquipList(tempArray);\n    mission_equiplist(index, tempArray, equipId);\n    console.log(\"Equip list\", equipList);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ShowBasicsEquip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"PageHead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Equip Catalog\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    bordered: true,\n    hover: true,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"Add Equip\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"Image\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, equipList.map((data, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: data.equip_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    id: \"EquipCheck\",\n    checked: equipList[index].checked,\n    onChange: e => {\n      checkedState(index, data.equip_id);\n      setEquipID(data.equip_id);\n    },\n    inputProps: {\n      \"aria-label\": \"primary checkbox\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: data.equip_img,\n    style: {\n      maxWidth: \"100px\"\n    },\n    alt: data.equip_description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, data.equip_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, data.equip_category), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      fontSize: \".75em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, data.equip_description)))))));\n};\n\nexport default MissionEquip;","map":{"version":3,"sources":["C:/Users/lucki/Desktop/ClassCodeProjects/amtil-mc/client/src/pages/Equipment/MissionEquip.js"],"names":["React","useState","useEffect","View","Axios","Container","Table","Checkbox","ShowSelectedEquip","MissionEquip","mission_id","setMissionID","JSON","parse","window","sessionStorage","getItem","equipList","setEquipList","equip_id","setEquipID","get","then","response","equip_array","data","map","equip","checked","mission_equiplist","index","equipId","console","log","post","delete","checkedState","tempArray","textAlign","e","equip_img","maxWidth","equip_description","equip_name","equip_category","fontSize"],"mappings":";AAAA,OAAO,eAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,IAArC,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,iBAAjC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM,CAACC,UAAD,EAAaC,YAAb,IAA6BV,QAAQ,CACzCW,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,SAA9B,CAAX,EAAqDN,UADZ,CAA3C;AAGA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACkB,QAAD,EAAWC,UAAX,IAAyBnB,QAAQ,CAAC,EAAD,CAAvC,CALyB,CAOzB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,UAAU,GAAGE,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,SAA9B,CAAX,EAChBN,UADH;AAGAN,IAAAA,KAAK,CAACiB,GAAN,CAAU,eAAV,EAA2BC,IAA3B,CAAiCC,QAAD,IAAc;AAC5C,YAAMC,WAAW,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAmBC,KAAD,KAAY,EAChD,GAAGA,KAD6C;AAEhDC,QAAAA,OAAO,EAAE;AAFuC,OAAZ,CAAlB,CAApB;AAIAV,MAAAA,YAAY,CAACM,WAAD,CAAZ;AACD,KAND,EAJc,CAYd;AACA;AACA;AACA;AACA;AACA;AACD,GAlBQ,EAkBN,EAlBM,CAAT,CARyB,CA4BzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMK,iBAAiB,GAAG,CAACC,KAAD,EAAQN,WAAR,EAAqBO,OAArB,KAAiC;AACzD,QAAIP,WAAW,CAACM,KAAD,CAAX,CAAmBF,OAAnB,KAA+B,IAAnC,EAAyC;AACvCI,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BvB,UAA1B,EAAsC,UAAtC,EAAkDqB,OAAlD;AACA3B,MAAAA,KAAK,CAAC8B,IAAN,CAAW,eAAX,EAA4B;AAC1Bf,QAAAA,QAAQ,EAAEY,OADgB;AAE1BrB,QAAAA,UAAU,EAAEA;AAFc,OAA5B,EAGGY,IAHH,CAGSC,QAAD,IAAc;AACpBS,QAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACD,OALD;AAMD,KARD,MAQO;AACLnB,MAAAA,KAAK,CAAC+B,MAAN,CAAa,mBAAmBzB,UAAnB,GAAgC,GAAhC,GAAsCqB,OAAnD,EAA4DT,IAA5D,CACGC,QAAD,IAAc;AACZS,QAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACD,OAHH;AAKD;AACF,GAhBD;;AAkBA,QAAMa,YAAY,GAAG,CAACN,KAAD,EAAQC,OAAR,KAAoB;AACvC,UAAMM,SAAS,GAAGpB,SAAlB;AACAoB,IAAAA,SAAS,CAACP,KAAD,CAAT,CAAiBF,OAAjB,GAA2B,CAACS,SAAS,CAACP,KAAD,CAAT,CAAiBF,OAA7C;AACAV,IAAAA,YAAY,CAACmB,SAAD,CAAZ;AACAR,IAAAA,iBAAiB,CAACC,KAAD,EAAQO,SAAR,EAAmBN,OAAnB,CAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BhB,SAA1B;AACD,GAND;;AAQA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAIE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,eAKE;AAAK,IAAA,KAAK,EAAE;AAAEqB,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,KAAD;AAAO,IAAA,QAAQ,MAAf;AAAgB,IAAA,KAAK,MAArB;AAAsB,IAAA,IAAI,EAAC,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,CADF,CADF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrB,SAAS,CAACS,GAAV,CAAc,CAACD,IAAD,EAAOK,KAAP,kBACb;AAAI,IAAA,GAAG,EAAEL,IAAI,CAACN,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,EAAE,EAAC,YADL;AAEE,IAAA,OAAO,EAAEF,SAAS,CAACa,KAAD,CAAT,CAAiBF,OAF5B;AAGE,IAAA,QAAQ,EAAGW,CAAD,IAAO;AACfH,MAAAA,YAAY,CAACN,KAAD,EAAQL,IAAI,CAACN,QAAb,CAAZ;AACAC,MAAAA,UAAU,CAACK,IAAI,CAACN,QAAN,CAAV;AACD,KANH;AAOE,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEM,IAAI,CAACe,SADZ;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAFT;AAGE,IAAA,GAAG,EAAEhB,IAAI,CAACiB,iBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKjB,IAAI,CAACkB,UAAV,CAnBF,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKlB,IAAI,CAACmB,cAAV,CApBF,eAqBE;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCpB,IAAI,CAACiB,iBAAxC,CArBF,CADD,CADH,CAXF,CANF,CADF,CADF;AAkDD,CAtHD;;AAwHA,eAAejC,YAAf","sourcesContent":["import \"../../App.css\";\r\nimport React, { useState, useEffect, View } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Container, Table } from \"react-bootstrap\";\r\nimport { Checkbox } from \"@material-ui/core\";\r\nimport ShowSelectedEquip from \"./ShowSelectedEquip\";\r\n\r\nconst MissionEquip = () => {\r\n  const [mission_id, setMissionID] = useState(\r\n    JSON.parse(window.sessionStorage.getItem(\"mission\")).mission_id\r\n  );\r\n  const [equipList, setEquipList] = useState([]);\r\n  const [equip_id, setEquipID] = useState(\"\");\r\n\r\n  //GETS MISSION ID FROM SESSION VARIABLE\r\n  useEffect(() => {\r\n    const mission_id = JSON.parse(window.sessionStorage.getItem(\"mission\"))\r\n      .mission_id;\r\n\r\n    Axios.get(\"/equipdetails\").then((response) => {\r\n      const equip_array = response.data.map((equip) => ({\r\n        ...equip,\r\n        checked: false,\r\n      }));\r\n      setEquipList(equip_array);\r\n    });\r\n\r\n    // Axios.get(\"/basics/\" + mission_id).then((response) => {\r\n    //   // console.log(\"basics\", response.data);\r\n    //   setEquipBox(response);\r\n    // });\r\n    // setEquipBox([1 ,2 ,3]);\r\n    // console.log(\"equip_box:\", equip_box);\r\n  }, []);\r\n\r\n  //GETS TOOL LIST FOR TOOL CATALOG //\r\n\r\n  //SAVES EACH TOOL TO MISSION TOOLS WHEN BOX IS CHECKED //\r\n  // const mission_equipbox = () => {\r\n  //   Axios.get(\"/basics/\" + mission_id)\r\n  //     .then((response) => {\r\n  //       console.log(\"basics\", response.data);\r\n  //     })\r\n  //     .then((response) => {\r\n  //       // console.log(response);\r\n  //       setEquipBox(response);\r\n  //     });\r\n  // };\r\n\r\n  const mission_equiplist = (index, equip_array, equipId) => {\r\n    if (equip_array[index].checked === true) {\r\n      console.log(\"mission_id\", mission_id, \"equip_id\", equipId);\r\n      Axios.post(\"/missionequip\", {\r\n        equip_id: equipId,\r\n        mission_id: mission_id,\r\n      }).then((response) => {\r\n        console.log(response);\r\n      });\r\n    } else {\r\n      Axios.delete(\"/missionequip/\" + mission_id + \"/\" + equipId).then(\r\n        (response) => {\r\n          console.log(response);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const checkedState = (index, equipId) => {\r\n    const tempArray = equipList;\r\n    tempArray[index].checked = !tempArray[index].checked;\r\n    setEquipList(tempArray);\r\n    mission_equiplist(index, tempArray, equipId);\r\n    console.log(\"Equip list\", equipList);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <ShowBasicsEquip />\r\n\r\n        \r\n        <h1 className=\"PageHead\">Equip Catalog</h1>\r\n        <div style={{ textAlign: \"center\" }}></div>\r\n        <Table bordered hover size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              {/* <th>Tool Id</th> */}\r\n              <th>Add Equip</th>\r\n              <th>Image</th>\r\n              <th>Name</th>\r\n              <th>Category</th>\r\n              <th>Description</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {equipList.map((data, index) => (\r\n              <tr key={data.equip_id}>\r\n                <td>\r\n                  <Checkbox\r\n                    id=\"EquipCheck\"\r\n                    checked={equipList[index].checked}\r\n                    onChange={(e) => {\r\n                      checkedState(index, data.equip_id);\r\n                      setEquipID(data.equip_id);\r\n                    }}\r\n                    inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <img\r\n                    src={data.equip_img}\r\n                    style={{ maxWidth: \"100px\" }}\r\n                    alt={data.equip_description}\r\n                  ></img>\r\n                </td>\r\n                <td>{data.equip_name}</td>\r\n                <td>{data.equip_category}</td>\r\n                <td style={{ fontSize: \".75em\" }}>{data.equip_description}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MissionEquip;"]},"metadata":{},"sourceType":"module"}