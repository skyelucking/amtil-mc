{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucki\\\\Desktop\\\\ClassCodeProjects\\\\amtil-mc\\\\client\\\\src\\\\pages\\\\Storyboards\\\\StoryDetails.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport \"../../App.css\";\nimport MissionStoryboards from \"./MissionStoryboards\";\nAxios.defaults.withCredentials = true;\nexport default function StoryDetails() {\n  const [mission_id, setMissionID] = useState(JSON.parse(window.sessionStorage.getItem(\"mission\")).mission_id); // Start of Cloudinary Upload\n\n  const [image, setImage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [storyPanels, setStoryPanels] = useState([]);\n\n  const uploadImage = async e => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"amtilunsigned\");\n    setLoading(true);\n    const res = await fetch(\"\thttps://api.cloudinary.com/v1_1/amtil/image/upload\", {\n      method: \"POST\",\n      body: data\n    });\n    const file = await res.json();\n    setImage(file.secure_url);\n    setLoading(false);\n    return file.secure_url;\n  }; //End of Cloudinary Upload//\n\n\n  const [panel_order, setPanelOrder] = useState(\"\");\n  const [panel_notes, setPanelNotes] = useState(\"\");\n  const [color_and_style, setColorandStyle] = useState(\"\");\n  const [panel_img, setPanelImg] = useState(\"\");\n\n  const post_storyboards = () => {\n    Axios.post(\"/poststoryboards\", {\n      panel_order: panel_order,\n      panel_notes: panel_notes,\n      color_and_style: color_and_style,\n      panel_img: image,\n      mission_id: mission_id\n    }).then(response => {\n      console.log(response);\n    });\n  };\n\n  useEffect(() => {\n    Axios.get(\"/b_storyboards/\" + mission_id).then(response => {\n      console.log(response.data);\n      setStoryPanels(response.data);\n    });\n  }, []);\n  var panelNum = storyPanels.length + 1;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"PageHead\",\n    style: {\n      width: \"12em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Storyboards\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputBox\",\n    style: {\n      width: \"50em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      border: \"2px\",\n      borderStyle: \"solid\",\n      borderColor: \"grey\",\n      padding: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Panel Image Upload\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"addElement\",\n    placeholder: image,\n    type: \"text\",\n    onChange: e => {\n      setPanelImg(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    placeholder: \"Upload an image\",\n    onChange: uploadImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }), loading ? /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    style: {\n      width: \"150px\"\n    },\n    alt: image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, \"Image URL: \", image)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"addElement\",\n    placeholder: \"Panel#\",\n    type: \"number\",\n    style: {\n      width: \"75px\"\n    },\n    onChange: e => {\n      setPanelOrder(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }), \" # of Panels: \", panelNum, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"addElement\",\n    placeholder: \"Panel Notes\",\n    style: {\n      height: \"75px\",\n      width: \"300px\"\n    },\n    onChange: e => {\n      setPanelNotes(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"addElement\",\n    placeholder: \"Style and Color Notes\",\n    style: {\n      height: \"75px\",\n      width: \"300px\"\n    },\n    onChange: e => {\n      setColorandStyle(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: post_storyboards,\n    style: {\n      margin: 15\n    },\n    alt: color_and_style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \" \", \"Save\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(MissionStoryboards, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/lucki/Desktop/ClassCodeProjects/amtil-mc/client/src/pages/Storyboards/StoryDetails.js"],"names":["React","useState","useEffect","Axios","MissionStoryboards","defaults","withCredentials","StoryDetails","mission_id","setMissionID","JSON","parse","window","sessionStorage","getItem","image","setImage","loading","setLoading","storyPanels","setStoryPanels","uploadImage","e","files","target","data","FormData","append","res","fetch","method","body","file","json","secure_url","panel_order","setPanelOrder","panel_notes","setPanelNotes","color_and_style","setColorandStyle","panel_img","setPanelImg","post_storyboards","post","then","response","console","log","get","panelNum","length","width","border","borderStyle","borderColor","padding","value","height","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport \"../../App.css\";\nimport MissionStoryboards from \"./MissionStoryboards\";\n\nAxios.defaults.withCredentials = true;\n\nexport default function StoryDetails() {\n  const [mission_id, setMissionID] = useState(\n    JSON.parse(window.sessionStorage.getItem(\"mission\")).mission_id\n  );\n  // Start of Cloudinary Upload\n  const [image, setImage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [storyPanels, setStoryPanels] = useState([]);\n\n  const uploadImage = async (e) => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"amtilunsigned\");\n    setLoading(true);\n    const res = await fetch(\n      \"\thttps://api.cloudinary.com/v1_1/amtil/image/upload\",\n      {\n        method: \"POST\",\n        body: data,\n      }\n    );\n    const file = await res.json();\n\n    setImage(file.secure_url);\n    setLoading(false);\n\n    return file.secure_url;\n  };\n\n  //End of Cloudinary Upload//\n  const [panel_order, setPanelOrder] = useState(\"\");\n  const [panel_notes, setPanelNotes] = useState(\"\");\n  const [color_and_style, setColorandStyle] = useState(\"\");\n  const [panel_img, setPanelImg] = useState(\"\");\n\n  const post_storyboards = () => {\n    Axios.post(\"/poststoryboards\", {\n      panel_order: panel_order,\n      panel_notes: panel_notes,\n      color_and_style: color_and_style,\n      panel_img: image,\n      mission_id: mission_id,\n    }).then((response) => {\n      console.log(response);\n    });\n  };\n\n  useEffect(() => {\n    Axios.get(\"/b_storyboards/\" + mission_id).then((response) => {\n      console.log(response.data);\n      setStoryPanels(response.data);\n      \n    });\n  }, []);\n\n  var panelNum = storyPanels.length + 1;\n\n  return (\n    <>\n      <div className=\"container\">\n        <h3 className=\"PageHead\" style={{width: \"12em\"}}>Storyboards</h3>\n        <div className=\"inputBox\" style={{width: \"50em\"}}>\n          \n          <div\n            style={{\n              border: \"2px\",\n              borderStyle: \"solid\",\n              borderColor: \"grey\",\n              padding: \"15px\",\n            }}\n          >\n            <b>Panel Image Upload</b>\n            <br></br>\n            <input\n              className=\"addElement\"\n              placeholder={image}\n              type=\"text\"\n              onChange={(e) => {\n                setPanelImg(e.target.value);\n              }}\n            />\n            {/* Image Upload Section */}\n            <div>\n              <input\n                type=\"file\"\n                name=\"file\"\n                placeholder=\"Upload an image\"\n                onChange={uploadImage}\n              />\n              {loading ? (\n                <h3>Loading...</h3>\n              ) : (\n                <img src={image} style={{ width: \"150px\" }} alt={image} />\n              )}\n              <div>Image URL: {image}</div>\n            </div>\n\n            <div></div>\n          </div>\n          <input\n            className=\"addElement\"\n            placeholder=\"Panel#\"\n            type=\"number\"\n            style={{ width: \"75px\" }}\n            onChange={(e) => {\n              setPanelOrder(e.target.value);\n            }}\n          /> # of Panels: {panelNum}\n\n          <textarea\n            className=\"addElement\"\n            placeholder=\"Panel Notes\"\n            style={{ height: \"75px\", width: \"300px\" }}\n            onChange={(e) => {\n              setPanelNotes(e.target.value);\n            }}\n          />\n          <textarea\n            className=\"addElement\"\n            placeholder=\"Style and Color Notes\"\n            style={{ height: \"75px\", width: \"300px\" }}\n            onChange={(e) => {\n              setColorandStyle(e.target.value);\n            }}\n          />\n\n          <button\n            onClick={post_storyboards}\n            style={{ margin: 15 }}\n            alt={color_and_style}\n          >\n            {\" \"}\n            Save\n          </button>\n        </div>\n        <br></br>\n        <MissionStoryboards />\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}