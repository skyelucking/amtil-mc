{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucki\\\\Desktop\\\\ClassCodeProjects\\\\amtil-mc\\\\client\\\\src\\\\pages\\\\Mission\\\\MissionTools.js\";\nimport \"../../App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { Container, Table, View } from \"react-bootstrap\";\nimport { Checkbox } from \"@material-ui/core\";\n\nconst MissionTools = () => {\n  const [toolList, setToolList] = useState([]);\n  const [tool_id, setToolID] = useState(\"\");\n  const [mission_id, setMissionID] = useState(JSON.parse(window.sessionStorage.getItem(\"mission\")).mission_id);\n  const [tool_check, setToolCheck] = useState([]);\n  const [selectedTools, setSelectedTools] = useState([]);\n  const [toolInfo, setToolInfo] = useState([]); //GETS MISSION ID FROM SESSION VARIABLE\n\n  useEffect(() => {\n    const mission_id = JSON.parse(window.sessionStorage.getItem(\"mission\")).mission_id;\n    Axios.get(\"/tooldetails\").then(response => {\n      const tool_array = response.data.map(tool => ({ ...tool,\n        checked: false\n      }));\n      setToolList(tool_array);\n    });\n    Axios.get(\"/missiontools/\" + mission_id).then(response => {\n      const tool_sel = response.data.map(tool => ({ ...tool,\n        checked: false\n      }));\n      setSelectedTools(tool_sel);\n    });\n  }, []); //GETS TOOL LIST FOR TOOL CATALOG //\n  //SAVES EACH TOOL TO MISSION TOOLS WHEN BOX IS CHECKED //\n\n  const mission_toolslist = (index, tool_array, toolId) => {\n    if (tool_array[index].checked === true) {\n      console.log(\"mission_id\", mission_id, \"tool_id\", toolId);\n      Axios.post(\"/missiontools\", {\n        tool_id: toolId,\n        mission_id: mission_id\n      }).then(response => {\n        console.log(response);\n      });\n    } else {\n      Axios.delete(\"/missiontools/\" + mission_id + \"/\" + toolId).then(response => {\n        console.log(response);\n      });\n    }\n  };\n\n  const checkedState = (index, toolId) => {\n    const tempArray = toolList;\n    tempArray[index].checked = !tempArray[index].checked;\n    setToolList(tempArray);\n    mission_toolslist(index, tempArray, toolId);\n    console.log(toolList);\n  };\n\n  const getToolInfo = (index, toolId) => {\n    Axios.get(\"/tooldetails\" + toolId).then(response => {\n      setToolInfo(response);\n      console.log(\"tool info\", toolInfo);\n    });\n    const tempArray = toolList;\n    tempArray[index].checked = !tempArray[index].checked;\n    setToolList(tempArray);\n    mission_toolslist(index, tempArray, toolId);\n    console.log(toolList);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"PageHead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Selected Tools\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    bordered: true,\n    hover: true,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"Remove Tool\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"Tool ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \"Mission ID\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, selectedTools.map((data, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: data.tool_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, \"Remove\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, data.tool_id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, data.mission_id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }, this.getToolInfo(index, data.tool_id)))))))), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"PageHead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"Tool Catalog\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    bordered: true,\n    hover: true,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, \"Add Tool\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, \"Image\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, toolList.map((data, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: data.tool_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    id: \"ToolCheck\",\n    checked: toolList[index].checked,\n    onChange: e => {\n      checkedState(index, data.tool_id);\n      setToolID(data.tool_id);\n    },\n    inputProps: {\n      \"aria-label\": \"primary checkbox\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: data.tool_img,\n    style: {\n      maxWidth: \"100px\"\n    },\n    alt: data.tool_description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, data.tool_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, data.tool_category), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      fontSize: \".75em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, data.tool_description)))))));\n};\n\nexport default MissionTools;","map":{"version":3,"sources":["C:/Users/lucki/Desktop/ClassCodeProjects/amtil-mc/client/src/pages/Mission/MissionTools.js"],"names":["React","useState","useEffect","Axios","Container","Table","View","Checkbox","MissionTools","toolList","setToolList","tool_id","setToolID","mission_id","setMissionID","JSON","parse","window","sessionStorage","getItem","tool_check","setToolCheck","selectedTools","setSelectedTools","toolInfo","setToolInfo","get","then","response","tool_array","data","map","tool","checked","tool_sel","mission_toolslist","index","toolId","console","log","post","delete","checkedState","tempArray","getToolInfo","textAlign","e","tool_img","maxWidth","tool_description","tool_name","tool_category","fontSize"],"mappings":"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","sourcesContent":["import \"../../App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Container, Table, View } from \"react-bootstrap\";\r\nimport { Checkbox } from \"@material-ui/core\";\r\n\r\nconst MissionTools = () => {\r\n  const [toolList, setToolList] = useState([]);\r\n  const [tool_id, setToolID] = useState(\"\");\r\n  const [mission_id, setMissionID] = useState(\r\n    JSON.parse(window.sessionStorage.getItem(\"mission\")).mission_id\r\n  );\r\n  const [tool_check, setToolCheck] = useState([]);\r\n  const [selectedTools, setSelectedTools] = useState([]);\r\n  const [toolInfo, setToolInfo] = useState([]);\r\n\r\n  //GETS MISSION ID FROM SESSION VARIABLE\r\n  useEffect(() => {\r\n    const mission_id = JSON.parse(window.sessionStorage.getItem(\"mission\"))\r\n      .mission_id;\r\n\r\n    Axios.get(\"/tooldetails\").then((response) => {\r\n      const tool_array = response.data.map((tool) => ({\r\n        ...tool,\r\n        checked: false,\r\n      }));\r\n      setToolList(tool_array);\r\n    });\r\n\r\n    Axios.get(\"/missiontools/\" + mission_id).then((response) => {\r\n      const tool_sel = response.data.map((tool) => ({\r\n        ...tool,\r\n        checked: false,\r\n      }));\r\n      setSelectedTools(tool_sel);\r\n    });\r\n  }, []);\r\n\r\n  //GETS TOOL LIST FOR TOOL CATALOG //\r\n\r\n  //SAVES EACH TOOL TO MISSION TOOLS WHEN BOX IS CHECKED //\r\n\r\n  const mission_toolslist = (index, tool_array, toolId) => {\r\n    if (tool_array[index].checked === true) {\r\n      console.log(\"mission_id\", mission_id, \"tool_id\", toolId);\r\n      Axios.post(\"/missiontools\", {\r\n        tool_id: toolId,\r\n        mission_id: mission_id,\r\n      }).then((response) => {\r\n        console.log(response);\r\n      });\r\n    } else {\r\n      Axios.delete(\"/missiontools/\" + mission_id + \"/\" + toolId).then(\r\n        (response) => {\r\n          console.log(response);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const checkedState = (index, toolId) => {\r\n    const tempArray = toolList;\r\n    tempArray[index].checked = !tempArray[index].checked;\r\n    setToolList(tempArray);\r\n    mission_toolslist(index, tempArray, toolId);\r\n    console.log(toolList);\r\n  };\r\n\r\n  const getToolInfo = (index, toolId) => {\r\n    Axios.get(\"/tooldetails\" + toolId).then((response) => {\r\n      setToolInfo(response);\r\n      console.log(\"tool info\", toolInfo);\r\n    });\r\n\r\n    const tempArray = toolList;\r\n    tempArray[index].checked = !tempArray[index].checked;\r\n    setToolList(tempArray);\r\n    mission_toolslist(index, tempArray, toolId);\r\n    console.log(toolList);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <h1 className=\"PageHead\">Selected Tools</h1>\r\n        <div style={{ textAlign: \"center\" }}></div>\r\n        <Table bordered hover size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              {/* <th>Tool Id</th> */}\r\n              <th>Remove Tool</th>\r\n              <th>Tool ID</th>\r\n              <th>Mission ID</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {selectedTools.map((data, index) => (\r\n              <tr key={data.tool_id}>\r\n                <td>\r\n                  <button>Remove</button>\r\n                </td>\r\n                <td>{data.tool_id}</td>\r\n                <td>{data.mission_id}</td>\r\n                <td>\r\n                  <View>{this.getToolInfo(index, data.tool_id)}</View>\r\n                  {/* onLoad={(e) => {this.getToolInfo(index, data.tool_id); }} */}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n      <Container>\r\n        <h1 className=\"PageHead\">Tool Catalog</h1>\r\n        <div style={{ textAlign: \"center\" }}></div>\r\n        <Table bordered hover size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              {/* <th>Tool Id</th> */}\r\n              <th>Add Tool</th>\r\n              <th>Image</th>\r\n              <th>Name</th>\r\n              <th>Category</th>\r\n              <th>Description</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {toolList.map((data, index) => (\r\n              <tr key={data.tool_id}>\r\n                <td>\r\n                  <Checkbox\r\n                    id=\"ToolCheck\"\r\n                    checked={toolList[index].checked}\r\n                    onChange={(e) => {\r\n                      checkedState(index, data.tool_id);\r\n                      setToolID(data.tool_id);\r\n                    }}\r\n                    inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <img\r\n                    src={data.tool_img}\r\n                    style={{ maxWidth: \"100px\" }}\r\n                    alt={data.tool_description}\r\n                  ></img>\r\n                </td>\r\n                <td>{data.tool_name}</td>\r\n                <td>{data.tool_category}</td>\r\n                <td style={{ fontSize: \".75em\" }}>{data.tool_description}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MissionTools;\r\n"]},"metadata":{},"sourceType":"module"}