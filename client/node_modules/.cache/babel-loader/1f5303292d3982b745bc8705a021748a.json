{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucki\\\\Desktop\\\\ClassCodeProjects\\\\amtil-mc\\\\client\\\\src\\\\pages\\\\ToolDetails.js\";\nimport React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport \"../App.css\";\nAxios.defaults.withCredentials = true;\nexport default function ToolDetails() {\n  const [hello, setHello] = useState(\"\"); // Start of Cloudinary Upload\n\n  const [image, setImage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const uploadImage = async e => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"amtilunsigned\");\n    setLoading(true);\n    const res = await fetch(\"\thttps://api.cloudinary.com/v1_1/amtil/image/upload\", {\n      method: \"POST\",\n      body: data\n    });\n    const file = await res.json();\n    setImage(file.secure_url);\n    setLoading(false);\n    setHello(file.secure_url);\n    return file.secure_url;\n  }; //End of Cloudinary Upload//\n\n\n  const [tool_name, setToolName] = useState(\"\");\n  const [tool_category, setToolCategory] = useState(\"\");\n  const [tool_description, setToolDesc] = useState(\"\");\n  const [tool_img, setToolImg] = useState(\"\");\n\n  const tool_details = () => {\n    Axios.post(\"/tooldetails\", {\n      tool_name: tool_name,\n      tool_category: tool_category,\n      tool_description: tool_description,\n      tool_img: tool_img\n    }).then(response => {\n      console.log(response);\n    });\n  };\n\n  const sayHello = () => {\n    setToolImg(image);\n    console.log(\"hello\", tool_img);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Add A New Tool\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"addElement\",\n    placeholder: \"Tool Name\",\n    type: \"text\",\n    onChange: e => {\n      setToolName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"addElement\",\n    placeholder: \"Tool Category\",\n    type: \"text\",\n    onChange: e => {\n      setToolCategory(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"addElement\",\n    placeholder: \"Tool Description\",\n    style: \"height: \",\n    onChange: e => {\n      setToolDesc(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      border: \"2px\",\n      borderStyle: \"solid\",\n      borderColor: \"grey\",\n      padding: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Tool Image Upload\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"addElement\",\n    placeholder: image,\n    type: \"text\",\n    onChange: e => {\n      setToolImg(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    placeholder: \"Upload an image\",\n    onChange: uploadImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }), loading ? /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    style: {\n      width: \"150px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"Image URL: \", image)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: tool_details,\n    style: {\n      margin: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \" \", \"Save\"))));\n}","map":{"version":3,"sources":["C:/Users/lucki/Desktop/ClassCodeProjects/amtil-mc/client/src/pages/ToolDetails.js"],"names":["React","useState","Axios","defaults","withCredentials","ToolDetails","hello","setHello","image","setImage","loading","setLoading","uploadImage","e","files","target","data","FormData","append","res","fetch","method","body","file","json","secure_url","tool_name","setToolName","tool_category","setToolCategory","tool_description","setToolDesc","tool_img","setToolImg","tool_details","post","then","response","console","log","sayHello","value","border","borderStyle","borderColor","padding","width","margin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport \"../App.css\";\n\n\nAxios.defaults.withCredentials = true;\n\n\n\nexport default function ToolDetails() {\n  const [hello, setHello] = useState(\"\");\n  // Start of Cloudinary Upload\n  const [image, setImage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  \n\n  const uploadImage = async (e) => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"amtilunsigned\");\n    setLoading(true);\n    const res = await fetch(\n      \"\thttps://api.cloudinary.com/v1_1/amtil/image/upload\",\n      {\n        method: \"POST\",\n        body: data,\n      }\n    );\n    const file = await res.json();\n\n    setImage(file.secure_url);\n    setLoading(false);\n    setHello(file.secure_url);\n    return(file.secure_url)\n    \n  };\n\n  //End of Cloudinary Upload//\n  const [tool_name, setToolName] = useState(\"\");\n  const [tool_category, setToolCategory] = useState(\"\");\n  const [tool_description, setToolDesc] = useState(\"\");\n  const [tool_img, setToolImg] = useState(\"\");\n\n  const tool_details = () => {\n    \n    Axios.post(\"/tooldetails\", {\n      tool_name: tool_name,\n      tool_category: tool_category,\n      tool_description: tool_description,\n      tool_img: tool_img,\n    }).then((response) => {\n      console.log(response);\n      \n    });\n  };\n\n  const sayHello = ()=>{\n    setToolImg(image);\n    console.log(\"hello\", tool_img)\n  }\n\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"inputBox\">\n          <h3>Add A New Tool</h3>\n\n          <input\n            className=\"addElement\"\n            placeholder=\"Tool Name\"\n            type=\"text\"\n            onChange={(e) => {\n              setToolName(e.target.value);\n            }}\n          />\n\n          <input\n            className=\"addElement\"\n            placeholder=\"Tool Category\"\n            type=\"text\"\n            onChange={(e) => {\n              setToolCategory(e.target.value);\n            }}\n          />\n\n          <textarea\n            className=\"addElement\"\n            placeholder=\"Tool Description\"\n            style=\"height: \"\n            onChange={(e) => {\n              setToolDesc(e.target.value);\n            }}\n          />\n          <div\n            style={{\n              border: \"2px\",\n              borderStyle: \"solid\",\n              borderColor: \"grey\",\n              padding: \"15px\",\n            }}\n          >\n            <b>Tool Image Upload</b>\n            <br></br>\n            <input\n              className=\"addElement\"\n              placeholder={image}\n              type=\"text\"\n              onChange={(e) => {\n                setToolImg(e.target.value);\n              }}\n            />\n            {/* Image Upload Section */}\n            <div>\n              <input\n                type=\"file\"\n                name=\"file\"\n                placeholder=\"Upload an image\"\n                onChange={uploadImage}\n              />\n              {loading ? (\n                <h3>Loading...</h3>\n              ) : (\n                \n                <img src={image} style={{ width: \"150px\" }} />\n              )}\n              <div>Image URL: {image}</div>\n            </div>\n\n            <div></div>\n          </div>\n          <button onClick={tool_details} style={{ margin: 15 }}>\n            {\" \"}\n            Save\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}