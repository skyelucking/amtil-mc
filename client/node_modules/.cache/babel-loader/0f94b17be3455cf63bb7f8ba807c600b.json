{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucki\\\\Desktop\\\\ClassCodeProjects\\\\amtil-mc\\\\client\\\\src\\\\pages\\\\Mission\\\\MissionTools.js\";\nimport \"../../App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { Container, Table } from \"react-bootstrap\";\nimport { Checkbox } from \"@material-ui/core\";\n\nconst MissionTools = () => {\n  //GETS MISSION ID FROM SESSION VARIABLE\n  useEffect(() => {\n    const mission_id = JSON.parse(window.sessionStorage.getItem(\"mission\")).mission_id;\n  }, []); //GETS TOOL LIST FOR TOOL CATALOG //\n\n  Axios.get(\"/tooldetails\").then(response => {\n    const tool_array = response.data.map(tool => ({ ...tool,\n      checked: false\n    }));\n    setToolList(tool_array);\n  });\n  const [toolList, setToolList] = useState([]); //SAVES EACH TOOL TO MISSION TOOLS WHEN BOX IS CHECKED //\n\n  const [tool_id, setToolID] = useState(\"\");\n  const [mission_id, setMissionID] = useState(JSON.parse(window.sessionStorage.getItem(\"mission\")).mission_id);\n  const [tool_check, setToolCheck] = useState([]);\n\n  const mission_toolslist = (index, tool_array) => {\n    if (tool_array[index].checked === false) {\n      Axios.post(\"/missiontools\", {\n        tool_id: tool_id,\n        mission_id: mission_id\n      }).then(response => {\n        console.log(response);\n      });\n    } else {\n      Axios.delete(\"/missiontools/\" + mission_id + \"/\" + tool_id).then(response => {\n        console.log(response);\n      });\n    }\n  };\n\n  const checkedState = (index, prevState) => {\n    console.log(\"index and prevstate:\", index, prevState);\n    const tempArray = toolList;\n    tempArray[index].checked = !tempArray[index].checked;\n    setToolList(tempArray);\n    mission_toolslist(index, tempArray);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"PageHead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Tool Catalog\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    bordered: true,\n    hover: true,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"Add Tool\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \"Image\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, toolList.map((data, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: data.tool_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    id: \"ToolCheck\",\n    checked: data.checked,\n    onChange: e => {\n      checkedState(index, data.checked);\n      setToolID(data.tool_id);\n    },\n    inputProps: {\n      \"aria-label\": \"primary checkbox\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: data.tool_img,\n    style: {\n      maxWidth: \"100px\"\n    },\n    alt: data.tool_description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, data.tool_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, data.tool_category), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      fontSize: \".75em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, data.tool_description)))))));\n};\n\nexport default MissionTools;","map":{"version":3,"sources":["C:/Users/lucki/Desktop/ClassCodeProjects/amtil-mc/client/src/pages/Mission/MissionTools.js"],"names":["React","useState","useEffect","Axios","Container","Table","Checkbox","MissionTools","mission_id","JSON","parse","window","sessionStorage","getItem","get","then","response","tool_array","data","map","tool","checked","setToolList","toolList","tool_id","setToolID","setMissionID","tool_check","setToolCheck","mission_toolslist","index","post","console","log","delete","checkedState","prevState","tempArray","textAlign","e","tool_img","maxWidth","tool_description","tool_name","tool_category","fontSize"],"mappings":"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","sourcesContent":["import \"../../App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Container, Table } from \"react-bootstrap\";\r\nimport { Checkbox } from \"@material-ui/core\";\r\n\r\nconst MissionTools = () => {\r\n  //GETS MISSION ID FROM SESSION VARIABLE\r\n  useEffect(() => {\r\n    const mission_id = JSON.parse(window.sessionStorage.getItem(\"mission\"))\r\n      .mission_id;\r\n  }, []);\r\n\r\n  //GETS TOOL LIST FOR TOOL CATALOG //\r\n  Axios.get(\"/tooldetails\").then((response) => {\r\n    const tool_array = response.data.map((tool) => ({...tool,checked: false}) )\r\n    setToolList(tool_array);\r\n    \r\n  });\r\n\r\n  const [toolList, setToolList] = useState([]);\r\n\r\n  //SAVES EACH TOOL TO MISSION TOOLS WHEN BOX IS CHECKED //\r\n  const [tool_id, setToolID] = useState(\"\");\r\n  const [mission_id, setMissionID] = useState(\r\n    JSON.parse(window.sessionStorage.getItem(\"mission\")).mission_id\r\n  );\r\n  const [tool_check, setToolCheck] = useState([]);\r\n\r\n  const mission_toolslist = (index, tool_array) => {\r\n  \r\n    if (tool_array[index].checked === false) {\r\n      Axios.post(\"/missiontools\", {\r\n        tool_id: tool_id,\r\n        mission_id: mission_id,\r\n      }).then((response) => {\r\n        console.log(response);\r\n      });\r\n    } else {\r\n      Axios.delete(\"/missiontools/\" + mission_id + \"/\" + tool_id).then(\r\n        (response) => {\r\n          console.log(response);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\nconst checkedState = (index, prevState) => {\r\n  console.log(\"index and prevstate:\", index, prevState);\r\n  const tempArray = toolList;\r\n  tempArray[index].checked = !tempArray[index].checked;\r\n  setToolList(tempArray);\r\n  mission_toolslist(index, tempArray);\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <h1 className=\"PageHead\">Tool Catalog</h1>\r\n        <div style={{ textAlign: \"center\" }}></div>\r\n        <Table bordered hover size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              {/* <th>Tool Id</th> */}\r\n              <th>Add Tool</th>\r\n              <th>Image</th>\r\n              <th>Name</th>\r\n              <th>Category</th>\r\n              <th>Description</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {toolList.map((data, index) => (\r\n              <tr key={data.tool_id}>\r\n                <td>\r\n                  <Checkbox\r\n                    id=\"ToolCheck\"\r\n                    checked={data.checked}\r\n                    onChange={(e) => {\r\n                      \r\n                      checkedState(index, data.checked);\r\n                      setToolID(data.tool_id);\r\n                    }}\r\n                    inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                  />\r\n                  {/* <Checkbox\r\n        defaultunchecked\r\n        color=\"primary\"\r\n        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n        onChange={(e) => {\r\n          setToolID(data.tool_id);\r\n          mission_toolslist();\r\n        }}\r\n      /> */}\r\n                </td>\r\n                <td>\r\n                  <img\r\n                    src={data.tool_img}\r\n                    style={{ maxWidth: \"100px\" }}\r\n                    alt={data.tool_description}\r\n                  ></img>\r\n                </td>\r\n                <td>{data.tool_name}</td>\r\n                <td>{data.tool_category}</td>\r\n                <td style={{ fontSize: \".75em\" }}>{data.tool_description}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MissionTools;\r\n"]},"metadata":{},"sourceType":"module"}