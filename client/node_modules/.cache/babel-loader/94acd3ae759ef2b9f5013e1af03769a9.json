{"ast":null,"code":"import createUploadQueue from \"./queue\";\nimport createItemsSender from \"./batchItemsSender\";\nimport createBatch from \"./batch\";\nexport default (function (trigger, cancellable, options, uploaderId) {\n  var sender = createItemsSender(),\n      queue = createUploadQueue(options, trigger, cancellable, sender, uploaderId);\n  var runCancellable = queue.runCancellable;\n  return {\n    process: function process(batch, batchOptions) {\n      queue.uploadBatch(batch, batchOptions);\n    },\n    abortBatch: function abortBatch(batchId) {\n      queue.abortBatch(batchId);\n    },\n    abort: function abort(id) {\n      if (id) {\n        queue.abortItem(id);\n      } else {\n        queue.abortAll();\n      }\n    },\n    addNewBatch: function addNewBatch(files, uploaderId, processOptions) {\n      var batch = createBatch(files, uploaderId, processOptions);\n      return queue.addBatch(batch, processOptions);\n    },\n    runCancellable: runCancellable,\n    clearPendingBatches: function clearPendingBatches() {\n      queue.clearPendingBatches();\n    },\n    processPendingBatches: function processPendingBatches(uploadOptions) {\n      queue.uploadPendingBatches(uploadOptions);\n    }\n  };\n});","map":{"version":3,"sources":["C:/Users/lucki/Desktop/ClassCodeProjects/amtil-mc/node_modules/@rpldy/uploader/lib/esm/processor.js"],"names":["createUploadQueue","createItemsSender","createBatch","trigger","cancellable","options","uploaderId","sender","queue","runCancellable","process","batch","batchOptions","uploadBatch","abortBatch","batchId","abort","id","abortItem","abortAll","addNewBatch","files","processOptions","addBatch","clearPendingBatches","processPendingBatches","uploadOptions","uploadPendingBatches"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,SAA9B;AACA,OAAOC,iBAAP,MAA8B,oBAA9B;AACA,OAAOC,WAAP,MAAwB,SAAxB;AACA,gBAAgB,UAAUC,OAAV,EAAmBC,WAAnB,EAAgCC,OAAhC,EAAyCC,UAAzC,EAAqD;AACnE,MAAIC,MAAM,GAAGN,iBAAiB,EAA9B;AAAA,MACIO,KAAK,GAAGR,iBAAiB,CAACK,OAAD,EAAUF,OAAV,EAAmBC,WAAnB,EAAgCG,MAAhC,EAAwCD,UAAxC,CAD7B;AAEA,MAAIG,cAAc,GAAGD,KAAK,CAACC,cAA3B;AACA,SAAO;AACLC,IAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC,KAAjB,EAAwBC,YAAxB,EAAsC;AAC7CJ,MAAAA,KAAK,CAACK,WAAN,CAAkBF,KAAlB,EAAyBC,YAAzB;AACD,KAHI;AAILE,IAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBC,OAApB,EAA6B;AACvCP,MAAAA,KAAK,CAACM,UAAN,CAAiBC,OAAjB;AACD,KANI;AAOLC,IAAAA,KAAK,EAAE,SAASA,KAAT,CAAeC,EAAf,EAAmB;AACxB,UAAIA,EAAJ,EAAQ;AACNT,QAAAA,KAAK,CAACU,SAAN,CAAgBD,EAAhB;AACD,OAFD,MAEO;AACLT,QAAAA,KAAK,CAACW,QAAN;AACD;AACF,KAbI;AAcLC,IAAAA,WAAW,EAAE,SAASA,WAAT,CAAqBC,KAArB,EAA4Bf,UAA5B,EAAwCgB,cAAxC,EAAwD;AACnE,UAAIX,KAAK,GAAGT,WAAW,CAACmB,KAAD,EAAQf,UAAR,EAAoBgB,cAApB,CAAvB;AACA,aAAOd,KAAK,CAACe,QAAN,CAAeZ,KAAf,EAAsBW,cAAtB,CAAP;AACD,KAjBI;AAkBLb,IAAAA,cAAc,EAAEA,cAlBX;AAmBLe,IAAAA,mBAAmB,EAAE,SAASA,mBAAT,GAA+B;AAClDhB,MAAAA,KAAK,CAACgB,mBAAN;AACD,KArBI;AAsBLC,IAAAA,qBAAqB,EAAE,SAASA,qBAAT,CAA+BC,aAA/B,EAA8C;AACnElB,MAAAA,KAAK,CAACmB,oBAAN,CAA2BD,aAA3B;AACD;AAxBI,GAAP;AA0BD,CA9BD","sourcesContent":["import createUploadQueue from \"./queue\";\nimport createItemsSender from \"./batchItemsSender\";\nimport createBatch from \"./batch\";\nexport default (function (trigger, cancellable, options, uploaderId) {\n  var sender = createItemsSender(),\n      queue = createUploadQueue(options, trigger, cancellable, sender, uploaderId);\n  var runCancellable = queue.runCancellable;\n  return {\n    process: function process(batch, batchOptions) {\n      queue.uploadBatch(batch, batchOptions);\n    },\n    abortBatch: function abortBatch(batchId) {\n      queue.abortBatch(batchId);\n    },\n    abort: function abort(id) {\n      if (id) {\n        queue.abortItem(id);\n      } else {\n        queue.abortAll();\n      }\n    },\n    addNewBatch: function addNewBatch(files, uploaderId, processOptions) {\n      var batch = createBatch(files, uploaderId, processOptions);\n      return queue.addBatch(batch, processOptions);\n    },\n    runCancellable: runCancellable,\n    clearPendingBatches: function clearPendingBatches() {\n      queue.clearPendingBatches();\n    },\n    processPendingBatches: function processPendingBatches(uploadOptions) {\n      queue.uploadPendingBatches(uploadOptions);\n    }\n  };\n});"]},"metadata":{},"sourceType":"module"}