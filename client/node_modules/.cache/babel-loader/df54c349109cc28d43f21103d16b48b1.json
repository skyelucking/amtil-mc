{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucki\\\\Desktop\\\\ClassCodeProjects\\\\amtil-mc\\\\client\\\\src\\\\pages\\\\Mission\\\\MissionTools.js\";\nimport \"../../App.css\";\nimport React, { useState, useEffect, View } from \"react\";\nimport Axios from \"axios\";\nimport { Container, Table } from \"react-bootstrap\";\nimport { Checkbox } from \"@material-ui/core\";\nimport ShowBasicsTools from \"./ShowBasicsTools\";\n\nconst MissionTools = () => {\n  const [mission_id, setMissionID] = useState(JSON.parse(window.sessionStorage.getItem(\"mission\")).mission_id);\n  const [toolList, setToolList] = useState([]);\n  const [tool_id, setToolID] = useState(\"\"); // const [tool_check, setToolCheck] = useState([]);\n\n  const [tool_box, setToolBox] = useState([]); //GETS MISSION ID FROM SESSION VARIABLE\n\n  useEffect(() => {\n    const mission_id = JSON.parse(window.sessionStorage.getItem(\"mission\")).mission_id;\n    Axios.get(\"/tooldetails\").then(response => {\n      const tool_array = response.data.map(tool => ({ ...tool,\n        checked: false\n      }));\n      setToolList(tool_array);\n    });\n    Axios.get(\"/basics/\" + mission_id).then(response => {\n      // console.log(\"basics\", response.data);\n      setToolBox(response);\n    }); // setToolBox([1 ,2 ,3]);\n    // console.log(\"tool_box:\", tool_box);\n  }, []); //GETS TOOL LIST FOR TOOL CATALOG //\n  //SAVES EACH TOOL TO MISSION TOOLS WHEN BOX IS CHECKED //\n\n  const mission_toolbox = () => {\n    Axios.get(\"/basics/\" + mission_id).then(response => {\n      console.log(\"basics\", response.data);\n    }).then(response => {\n      // console.log(response);\n      setToolBox(response);\n    });\n  };\n\n  const mission_toolslist = (index, tool_array, toolId) => {\n    if (tool_array[index].checked === true) {\n      console.log(\"mission_id\", mission_id, \"tool_id\", toolId);\n      Axios.post(\"/missiontools\", {\n        tool_id: toolId,\n        mission_id: mission_id\n      }).then(response => {\n        console.log(response);\n      });\n    } else {\n      Axios.delete(\"/missiontools/\" + mission_id + \"/\" + toolId).then(response => {\n        console.log(response);\n      });\n    }\n  };\n\n  const checkedState = (index, toolId) => {\n    const tempArray = toolList;\n    tempArray[index].checked = !tempArray[index].checked;\n    setToolList(tempArray);\n    mission_toolslist(index, tempArray, toolId);\n    console.log(\"Tool list\", toolList);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ShowBasicsTools, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"PageHead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Tool Catalog\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    bordered: true,\n    hover: true,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"Add Tool\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"Image\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, toolList.map((data, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: data.tool_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    id: \"ToolCheck\",\n    checked: toolList[index].checked,\n    onChange: e => {\n      checkedState(index, data.tool_id);\n      setToolID(data.tool_id);\n    },\n    inputProps: {\n      \"aria-label\": \"primary checkbox\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: data.tool_img,\n    style: {\n      maxWidth: \"100px\"\n    },\n    alt: data.tool_description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, data.tool_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, data.tool_category), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      fontSize: \".75em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, data.tool_description)))))));\n};\n\nexport default MissionTools;","map":{"version":3,"sources":["C:/Users/lucki/Desktop/ClassCodeProjects/amtil-mc/client/src/pages/Mission/MissionTools.js"],"names":["React","useState","useEffect","View","Axios","Container","Table","Checkbox","ShowBasicsTools","MissionTools","mission_id","setMissionID","JSON","parse","window","sessionStorage","getItem","toolList","setToolList","tool_id","setToolID","tool_box","setToolBox","get","then","response","tool_array","data","map","tool","checked","mission_toolbox","console","log","mission_toolslist","index","toolId","post","delete","checkedState","tempArray","textAlign","e","tool_img","maxWidth","tool_description","tool_name","tool_category","fontSize"],"mappings":"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","sourcesContent":["import \"../../App.css\";\r\nimport React, { useState, useEffect, View } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Container, Table } from \"react-bootstrap\";\r\nimport { Checkbox } from \"@material-ui/core\";\r\nimport ShowBasicsTools from \"./ShowBasicsTools\";\r\n\r\nconst MissionTools = () => {\r\n  const [mission_id, setMissionID] = useState(\r\n    JSON.parse(window.sessionStorage.getItem(\"mission\")).mission_id\r\n  );\r\n  const [toolList, setToolList] = useState([]);\r\n  const [tool_id, setToolID] = useState(\"\");\r\n  // const [tool_check, setToolCheck] = useState([]);\r\n  const [tool_box, setToolBox] = useState([]);\r\n\r\n  //GETS MISSION ID FROM SESSION VARIABLE\r\n  useEffect(() => {\r\n    const mission_id = JSON.parse(window.sessionStorage.getItem(\"mission\"))\r\n      .mission_id;\r\n\r\n    Axios.get(\"/tooldetails\").then((response) => {\r\n      const tool_array = response.data.map((tool) => ({\r\n        ...tool,\r\n        checked: false,\r\n      }));\r\n      setToolList(tool_array);\r\n    });\r\n\r\n    Axios.get(\"/basics/\" + mission_id).then((response) => {\r\n      // console.log(\"basics\", response.data);\r\n      setToolBox(response);\r\n    });\r\n    // setToolBox([1 ,2 ,3]);\r\n    // console.log(\"tool_box:\", tool_box);\r\n  }, []);\r\n\r\n  //GETS TOOL LIST FOR TOOL CATALOG //\r\n\r\n  //SAVES EACH TOOL TO MISSION TOOLS WHEN BOX IS CHECKED //\r\n  const mission_toolbox = () => {\r\n    Axios.get(\"/basics/\" + mission_id)\r\n      .then((response) => {\r\n        console.log(\"basics\", response.data);\r\n      })\r\n      .then((response) => {\r\n        // console.log(response);\r\n        setToolBox(response);\r\n      });\r\n  };\r\n\r\n  const mission_toolslist = (index, tool_array, toolId) => {\r\n    if (tool_array[index].checked === true) {\r\n      console.log(\"mission_id\", mission_id, \"tool_id\", toolId);\r\n      Axios.post(\"/missiontools\", {\r\n        tool_id: toolId,\r\n        mission_id: mission_id,\r\n      }).then((response) => {\r\n        console.log(response);\r\n      });\r\n    } else {\r\n      Axios.delete(\"/missiontools/\" + mission_id + \"/\" + toolId).then(\r\n        (response) => {\r\n          console.log(response);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const checkedState = (index, toolId) => {\r\n    const tempArray = toolList;\r\n    tempArray[index].checked = !tempArray[index].checked;\r\n    setToolList(tempArray);\r\n    mission_toolslist(index, tempArray, toolId);\r\n    console.log(\"Tool list\", toolList);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <ShowBasicsTools />\r\n        <h1 className=\"PageHead\">Tool Catalog</h1>\r\n        <div style={{ textAlign: \"center\" }}></div>\r\n        <Table bordered hover size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              {/* <th>Tool Id</th> */}\r\n              <th>Add Tool</th>\r\n              <th>Image</th>\r\n              <th>Name</th>\r\n              <th>Category</th>\r\n              <th>Description</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {toolList.map((data, index) => (\r\n              <tr key={data.tool_id}>\r\n                <td>\r\n                  <Checkbox\r\n                    id=\"ToolCheck\"\r\n                    checked={toolList[index].checked}\r\n                    onChange={(e) => {\r\n                      checkedState(index, data.tool_id);\r\n                      setToolID(data.tool_id);\r\n                    }}\r\n                    inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <img\r\n                    src={data.tool_img}\r\n                    style={{ maxWidth: \"100px\" }}\r\n                    alt={data.tool_description}\r\n                  ></img>\r\n                </td>\r\n                <td>{data.tool_name}</td>\r\n                <td>{data.tool_category}</td>\r\n                <td style={{ fontSize: \".75em\" }}>{data.tool_description}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MissionTools;\r\n"]},"metadata":{},"sourceType":"module"}